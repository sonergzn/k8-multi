apiVersion: v1
kind: Service
metadata:
  name: client-cluster-ip-service
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    component: web
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-cluster-ip-service
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    component: postgres
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-ip-service
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    component: redis
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: server-cluster-ip-service
spec:
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    component: server
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: database-persistent-volume-claim
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: client-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      component: web
  template:
    metadata:
      labels:
        component: web
    spec:
      containers:
      - image: sonergezgen/multi-client:latest
        name: client
        ports:
        - containerPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: postgres
  template:
    metadata:
      labels:
        component: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: PGPASSWORD
              name: pgpassword
        image: postgres:latest
        name: postgres
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-storage
          subPath: postgres
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: database-persistent-volume-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: redis
  template:
    metadata:
      labels:
        component: redis
    spec:
      containers:
      - image: redis:latest
        name: redis
        ports:
        - containerPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: server-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      component: server
  template:
    metadata:
      labels:
        component: server
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-cluster-ip-service
        - name: REDIS_PORT
          value: "6379"
        - name: PGUSER
          value: postgres
        - name: PGHOST
          value: postgres-cluster-ip-service
        - name: PGDATABASE
          value: postgres
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: PGPASSWORD
              name: pgpassword
        - name: PGPORT
          value: "5432"
        image: sonergezgen/multi-server:latest
        name: server
        ports:
        - containerPort: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: worker-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: worker
  template:
    metadata:
      labels:
        component: worker
    spec:
      containers:
      - env:
        - name: REDIS_HOST
          value: redis-cluster-ip-service
        - name: REDIS_PORT
          value: "6379"
        image: sonergezgen/multi-worker:latest
        name: worker
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/use-regex: "true"
  name: ingress-service
spec:
  rules:
  - host: dev.k8-multi.com
  - http:
      paths:
      - backend:
          service:
            name: client-cluster-ip-service
            port:
              number: 3000
        path: /?(.*)
        pathType: Prefix
      - backend:
          service:
            name: server-cluster-ip-service
            port:
              number: 5000
        path: /api/?(.*)
        pathType: Prefix
